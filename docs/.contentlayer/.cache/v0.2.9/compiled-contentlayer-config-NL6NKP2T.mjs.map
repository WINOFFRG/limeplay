{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\r\n\r\nexport const Guide = defineDocumentType(() => ({\r\n    name: 'Guide',\r\n    contentType: 'mdx',\r\n    // Location of Post source files (relative to `contentDirPath`)\r\n    filePathPattern: '**/*.mdx',\r\n    // At the time of writing, we also have to define the `fields`\r\n    // option to prevent an error on generation. We'll discuss\r\n    // this option later. For now, we'll add an empty object.\r\n    fields: {\r\n        title: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: 'string',\r\n        },\r\n        props: {\r\n            type: 'list',\r\n            required: true,\r\n            of: {\r\n                type: 'string',\r\n            },\r\n        },\r\n        import: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        docs: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        source: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        package: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        installation: {\r\n            type: 'string',\r\n        },\r\n        pageTitle: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        license: {\r\n            type: 'string',\r\n        },\r\n        styles: {\r\n            type: 'list',\r\n            required: true,\r\n            of: {\r\n                type: 'string',\r\n            },\r\n        },\r\n        group: {\r\n            type: 'string',\r\n        },\r\n        order: {\r\n            type: 'number',\r\n            required: true,\r\n        },\r\n        slug: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        category: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        release: {\r\n            type: 'string',\r\n        },\r\n        date: {\r\n            type: 'string',\r\n        },\r\n        search: {\r\n            type: 'string',\r\n        },\r\n        error: {\r\n            type: 'string',\r\n        },\r\n        componentPrefix: {\r\n            type: 'string',\r\n        },\r\n        hideToc: {\r\n            type: 'boolean',\r\n        },\r\n        polymorphic: {\r\n            type: 'boolean',\r\n        },\r\n        hidden: {\r\n            type: 'boolean',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default makeSource({\r\n    // Location of source files for all defined documentTypes\r\n    contentDirPath: 'docs',\r\n    documentTypes: [Guide],\r\n});\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,aAAa;AAAA,EAEb,iBAAiB;AAAA,EAIjB,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,MACV,IAAI;AAAA,QACA,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,cAAc;AAAA,MACV,MAAM;AAAA,IACV;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,IAAI;AAAA,QACA,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,iBAAiB;AAAA,MACb,MAAM;AAAA,IACV;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,IACV;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EAEtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK;AACzB,CAAC;",
  "names": []
}
